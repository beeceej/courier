// Code generated by protoc-gen-go. DO NOT EDIT.
// source: courier.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	courier.proto

It has these top-level messages:
	SendMailRequest
	SendStatus
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SendStatus_Status int32

const (
	SendStatus_Success SendStatus_Status = 0
	SendStatus_Fail    SendStatus_Status = 1
)

var SendStatus_Status_name = map[int32]string{
	0: "Success",
	1: "Fail",
}
var SendStatus_Status_value = map[string]int32{
	"Success": 0,
	"Fail":    1,
}

func (x SendStatus_Status) String() string {
	return proto.EnumName(SendStatus_Status_name, int32(x))
}
func (SendStatus_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type SendMailRequest struct {
	Sender     string   `protobuf:"bytes,1,opt,name=sender" json:"sender,omitempty"`
	Recipients []string `protobuf:"bytes,2,rep,name=recipients" json:"recipients,omitempty"`
	Subject    string   `protobuf:"bytes,3,opt,name=subject" json:"subject,omitempty"`
	BodyText   string   `protobuf:"bytes,4,opt,name=bodyText" json:"bodyText,omitempty"`
	BodyType   string   `protobuf:"bytes,5,opt,name=bodyType" json:"bodyType,omitempty"`
}

func (m *SendMailRequest) Reset()                    { *m = SendMailRequest{} }
func (m *SendMailRequest) String() string            { return proto.CompactTextString(m) }
func (*SendMailRequest) ProtoMessage()               {}
func (*SendMailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SendMailRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *SendMailRequest) GetRecipients() []string {
	if m != nil {
		return m.Recipients
	}
	return nil
}

func (m *SendMailRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *SendMailRequest) GetBodyText() string {
	if m != nil {
		return m.BodyText
	}
	return ""
}

func (m *SendMailRequest) GetBodyType() string {
	if m != nil {
		return m.BodyType
	}
	return ""
}

type SendStatus struct {
	Status SendStatus_Status `protobuf:"varint,1,opt,name=status,enum=courier.SendStatus_Status" json:"status,omitempty"`
}

func (m *SendStatus) Reset()                    { *m = SendStatus{} }
func (m *SendStatus) String() string            { return proto.CompactTextString(m) }
func (*SendStatus) ProtoMessage()               {}
func (*SendStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SendStatus) GetStatus() SendStatus_Status {
	if m != nil {
		return m.Status
	}
	return SendStatus_Success
}

func init() {
	proto.RegisterType((*SendMailRequest)(nil), "courier.SendMailRequest")
	proto.RegisterType((*SendStatus)(nil), "courier.SendStatus")
	proto.RegisterEnum("courier.SendStatus_Status", SendStatus_Status_name, SendStatus_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Mail service

type MailClient interface {
	Send(ctx context.Context, in *SendMailRequest, opts ...grpc.CallOption) (*SendStatus, error)
}

type mailClient struct {
	cc *grpc.ClientConn
}

func NewMailClient(cc *grpc.ClientConn) MailClient {
	return &mailClient{cc}
}

func (c *mailClient) Send(ctx context.Context, in *SendMailRequest, opts ...grpc.CallOption) (*SendStatus, error) {
	out := new(SendStatus)
	err := grpc.Invoke(ctx, "/courier.Mail/Send", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Mail service

type MailServer interface {
	Send(context.Context, *SendMailRequest) (*SendStatus, error)
}

func RegisterMailServer(s *grpc.Server, srv MailServer) {
	s.RegisterService(&_Mail_serviceDesc, srv)
}

func _Mail_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/courier.Mail/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailServer).Send(ctx, req.(*SendMailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mail_serviceDesc = grpc.ServiceDesc{
	ServiceName: "courier.Mail",
	HandlerType: (*MailServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _Mail_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "courier.proto",
}

func init() { proto.RegisterFile("courier.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x49, 0x6b, 0x92, 0xf6, 0x10, 0x50, 0x1d, 0x12, 0xb2, 0x32, 0x40, 0x95, 0xa9, 0x53,
	0x86, 0x20, 0x46, 0x16, 0x06, 0x36, 0x96, 0x84, 0x89, 0x2d, 0x71, 0x6e, 0x30, 0xaa, 0x12, 0xe3,
	0xb3, 0x25, 0xf2, 0x5b, 0xf8, 0xb3, 0x28, 0x26, 0x2d, 0x41, 0xea, 0x64, 0x7f, 0x7e, 0x77, 0xe7,
	0x7b, 0x0f, 0x2e, 0x55, 0xef, 0xad, 0x26, 0x9b, 0x1b, 0xdb, 0xbb, 0x1e, 0x93, 0x09, 0xb3, 0xef,
	0x08, 0xae, 0x2b, 0xea, 0xda, 0xd7, 0x5a, 0xef, 0x4b, 0xfa, 0xf4, 0xc4, 0x0e, 0x6f, 0x21, 0x66,
	0xea, 0x5a, 0xb2, 0x32, 0xda, 0x46, 0xbb, 0x75, 0x39, 0x11, 0xde, 0x01, 0x58, 0x52, 0xda, 0x68,
	0xea, 0x1c, 0xcb, 0xc5, 0x76, 0xb9, 0x5b, 0x97, 0xb3, 0x17, 0x94, 0x90, 0xb0, 0x6f, 0x3e, 0x48,
	0x39, 0xb9, 0x0c, 0x8d, 0x07, 0xc4, 0x14, 0x56, 0x4d, 0xdf, 0x0e, 0x6f, 0xf4, 0xe5, 0xa4, 0x08,
	0xd2, 0x91, 0x8f, 0xda, 0x60, 0x48, 0x9e, 0xcf, 0xb4, 0xc1, 0x50, 0x56, 0x03, 0x8c, 0xcb, 0x55,
	0xae, 0x76, 0x9e, 0xb1, 0x80, 0x98, 0xc3, 0x2d, 0xec, 0x75, 0x55, 0xa4, 0xf9, 0xc1, 0xd4, 0x5f,
	0x51, 0xfe, 0x7b, 0x94, 0x53, 0x65, 0x76, 0x0f, 0xf1, 0xd4, 0x7d, 0x01, 0x49, 0xe5, 0x95, 0x22,
	0xe6, 0xcd, 0x19, 0xae, 0x40, 0xbc, 0xd4, 0x7a, 0xbf, 0x89, 0x8a, 0x27, 0x10, 0xa3, 0x77, 0x7c,
	0x04, 0x31, 0x4e, 0x41, 0xf9, 0x6f, 0xe8, 0x2c, 0x96, 0xf4, 0xe6, 0xc4, 0x77, 0xcf, 0xe2, 0x7d,
	0x61, 0x9a, 0x26, 0x0e, 0xa9, 0x3e, 0xfc, 0x04, 0x00, 0x00, 0xff, 0xff, 0x83, 0x73, 0xa4, 0x9c,
	0x66, 0x01, 0x00, 0x00,
}
